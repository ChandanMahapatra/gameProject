
#include<stdio.h>
#include<conio.h>
#include<process.h>
#include<dos.h>
#include<mouse.h>
#include<graphics.h>
#include<fstream.h>
#include<stdlib.h>

int x,y;


class sample
{
	public : void menu();
				void instruct();
};


class game
{
	 public : int j;
				 int h;
				 int att;
				 int def;
				 int mon;
				 int indus;
				 int wall;
				 int sol;
				 int farm;
				 char name[30];
				 char civ[50];
				 void check();
				 void turn();
				 void calc();
				 void draw();
				 void startgame();
}q[4];

int nop = 2;
int n;

void main()
{
	randomize();

	int a[3];
	a[0] = 4;
	a[1] = 12;
	a[2] = 14;

	int gd,gm;
	gd=DETECT;
	initgraph(&gd, &gm, "d:\\bc45\\bgi");

	x = getmaxx()/2;
	y = getmaxy()/2;
	setcolor(GREEN);

	for(int i = 0;i<x*2;i++)
	{
		delay(2);
		rectangle(50,100,i,200);
	}
	setcolor(WHITE);
	settextstyle(0,0,5);
	outtextxy(250,150,"WARS");
	delay(1000);

	for(int j=0;j<15;j++)
	{
		int p = random(600);
		int q = random(400);

		for(int i = 0;i<80;i++)
		{
			delay(1);
			setcolor(a[random(3)]);
			moveto(p,q);
			linerel(random(-100),random(100));
			moveto(p,q);
			linerel(random(100),random(-100));
			moveto(p,q);
			linerel(random(-100),random(-100));
			moveto(p,q);
			linerel(random(100),random(100));
		}
		cleardevice();
	}

	cleardevice();
	sample ob;
	int g=DETECT,m;

	ob.menu();
	getch();
}

void sample :: menu()            //Menu function to display menu
{
	cleardevice();
	int i,j,cl;
	settextjustify(1,1);
	settextstyle(4,0,6);
	setcolor(GREEN);
	outtextxy(320,50,"WARS");
	setcolor(WHITE);
	settextstyle(3,0,3);
	outtextxy(320,90,"Lead your civilization to victory !!");
	setcolor(GREEN);
	rectangle(240,180,440,220);
	rectangle(240,260,440,300);
	rectangle(240,340,440,380);
	setfillstyle(1,GREEN);
	floodfill(321,191,GREEN);
	floodfill(321,271,GREEN);
	floodfill(321,350,GREEN);
	setcolor(0);
	settextjustify(1,1);

	outtextxy(320,190,"Start Game");
	outtextxy(330,270,"Instructions");
	outtextxy(280,350,"EXIT");
	setcolor(15);
	initmouse();
	showmouseptr();
	int n(1);
	do
	{
		getmousepos(&cl,&i,&j);

		if(cl==1)
		{
			if((i>240)&&(i<440)&&(j>180)&&(j<220))
			{
				n=0;
				hidemouseptr();
				cleardevice();
				settextstyle(0,0,1);
				outtextxy(100,100,"Welcome");//The required function is called
				outtextxy(200,200,"Press any key to start");
				getch();
				q[0].startgame();
					break;
			}
			if ((i>240)&&(i<440)&&(j>260)&&(j<300))
			{
				hidemouseptr();
				cleardevice();
				instruct();
					break;
			}

			if ((i>240)&&(i<440)&&(j>340)&&(j<380))
				exit(0);
		}
	}	while(n);
}


void sample :: instruct()//Displays Instructions
{
	cleardevice();
	gotoxy(2,2);
	cout<<"WARS is a 2 player Turn Based Strategy Game"<<endl;
	cout<<"The aim is to eliminate the opponent"<<endl;
	cout<<"(for that you need to reduce your opponent's health to Zero)"<<endl;
	cout<<endl;
	cout<<"You start off with some basic stats : "<<endl;
	cout<<"Health = 100 HP (MAX)"<<endl;
	cout<<"Attack = 20 "<<endl;
	cout<<"Defence = 10"<<endl;
	cout<<"Money = 500 Coins "<<endl;
	cout<<endl;
	cout<<"During your turn you can :  "<<endl;
	cout<<endl;
	cout<<"a) Build a : "<<endl;
	cout<<"  1)Wall : It gives defence(+5) - Costs 60 Coins "<<endl;
	cout<<"  2)Soldier : It gives attack(+7) - Costs 75 Coins "<<endl;
	cout<<"  3)Indusry : Its generates money (by 20 Coins after each turn, more industries               you have more money you generate ) - Costs 75 Coins  "<<endl;
	cout<<"  4)Farm : It regenerates Health(by  5HP after each turn,more farms you                    have more HP you regenerate) - Costs 80 Coins  "<<endl;
	cout<<endl;
	cout<<"b)  Attack the opponent "<<endl;
	getch();
	menu();
}


void game::startgame()//The game starts
{
	cleardevice();
	for(int l = 0;l<4;l++)
	{
		q[l].mon = 500;
		q[l].h = 100;
		q[l].att = 0;
		q[l].def =0;
		q[l].sol = 0;
		q[l].wall = 0;
		q[l].farm = 0;
		q[l].indus = 0;
	}
	gotoxy(2,2);
	cout<<"Your time has come to lead your people, lead your nation"<<endl;
	cout<<"this is your time ..... the time of kings ,the time of heroes"<<endl;
	cout<<"..... the time to make your mark on history"<<endl;
	cout<<"Come forward and etch thy name,a name that wont be soon forgotten"<<endl;
	cout<<"Press any key ....";
	getch();
	cleardevice();
	gotoxy(1,1);
	for(int i =0;i<2;i++)
	{
		cout<<endl;
		cout<<"Player "<<(i+1)<<" : ";
		gets(q[i].name);
		cout<<"Enter name of your civilization  : ";
		gets(q[i].civ);
	}
	int p = 10;
	fstream f;
	f.open("Players.txt",ios::in|ios::out);
	for(i = 0;i<2;i++)
	{
		f<<'\n'<<"Player"<<i+1<<" : "<<q[i].name<<endl;
		f<<'\n'<<"Civilisation : "<<q[i].civ<<endl;
		f.write((char*)&q[i],sizeof(q[i]));
	}
	f.close();
	getch();
	int flag = 0;
	while(nop>1)
	for(int k = 0 ; k<2;k++)
	{
		n = k;
		if(flag==0)
		{
			q[0].calc();
			q[0].draw();
		}
		q[0].check();
		flag++;
	}
}

void game :: check() //Checks if the player is dead or alive
{
	cleardevice();
	if(q[n].h <= 0)
	{
		q[n].h =0;
		gotoxy(10,10);
		cout<<'\n'<<"      "<<q[n].name<<" has been kicked out of the game"<<endl;
		if(n==0)
		cout<<"       "<<q[n+1].name<<" is VICTORIOUS !!!"<<endl;
		else
		cout<<"       "<<q[n-1].name<<" is VICTORIOUS !!!"<<endl;
		cout<<'\n';
		cout<<"       WARS has been brought to you by "<<endl;
		cout<<"       CH@D_Slayer and DARKLORDSHYAM"<<endl;
		getch();
		nop--;
	}
	else if(q[n].h>0)
	{
		q[0].turn();
		q[0].calc();
		q[0].draw();
	}
}

void game :: turn() //Player plays his turn
{
	start :
	cleardevice();
	cout<<'\n';
	gotoxy(10,10);
	cout<<q[n].name<<"'s "<<"turn"<<endl;
	cout<<"The number of walls you have : "<<q[n].wall<<endl;
	cout<<"The number of soldiers you have : "<<q[n].sol<<endl;
	cout<<"The number of industries you have : "<<q[n].indus<<endl;
	cout<<"The number of farms you have : "<<q[n].farm<<endl;
	int ch;
	cout<<'\n'<<'\n';
	cout<<"Menu : "<<endl;
	cout<<"1.Build a wall"<<endl;
	cout<<"2.Create a soldier"<<endl;
	cout<<"3.Start an industry"<<endl;
	cout<<"4.Start a farm"<<endl;
	cout<<"5.Attack opponent"<<endl;
	cout<<"Enter your choice : ";
	cin>>ch;

	switch(ch)
	{
		case 1:
		if(q[n].mon>60)
		{
			q[n].wall++;
			q[n].mon-=60 ;
		}
		else
		{
			cleardevice();
			gotoxy(10,10);
			cout<<"You do not have enough money to build this"<<endl;
			getch();
			goto start;
		}
			break;

		case 2:
		if(q[n].mon>75)
		{
			q[n].sol++;
			q[n].mon-=75 ;
		}
		else
		{
			cleardevice();
			gotoxy(10,10);
			cout<<"You do not have enough money to build this"<<endl;
			getch();
			goto start;
    	}
			break;

		case 3:
		if(q[n].mon>75)
		{
			q[n].indus++;
			q[n].mon-=75 ;
		}
		else
		{
			cleardevice();
			gotoxy(10,10);
			cout<<"You do not have enough money to build this"<<endl;
			getch();
			goto start;
		}
			break;

		case 4:
		if(q[n].mon>80)
		{
			q[n].farm++;
			q[n].mon-=80;
		}
		else
		{
			cleardevice();
			gotoxy(10,10);
			cout<<"You do not have enough money to build this"<<endl;
			getch();
			goto start;
		}
			break;

		case 5:
		{
			int dam;
			if(n==0)
			{
				dam = q[n].att-(q[n+1].def)/2;
				if(dam>0)
          		q[n+1].h = q[n+1].h - dam;
			}
      	else if(n==1)
			{
				dam = q[n].att-(q[n-1].def)/2;
				if(dam>0)
					q[n-1].h = q[n-1].h - dam;
			}
				break;
		}

		default : exit(0);
	}
}

void game :: calc()//Calculates all stats
{
	int k;
	for(k=0;k<2;k++)
	{
		 q[k].att = 20 + q[k].sol*7;
		 q[k].def = 10 + q[k].wall*5;
	}

	q[n].mon = q[n].mon + q[n].indus*20;
	if(n==1)
	for(k=0;k<2;k++)
	{
		q[k].h = q[k].h + q[k].farm*5;
		if(q[k].h>100)
		q[k].h  =100;
	}
}

void game::draw()//Draws details and health bar
{
	cleardevice();
	gotoxy(1,1);

	for(int g=0;g<2;g++)
	{
		cout<<'\n'<<q[g].name<<endl<<endl;
		cout<<'\n'<<"The "<<q[g].civ<<'\n';
		cout<<'\n'<<'\n';
		cout<<"Health : ";
		if(g==0)
		{
			if(q[g].h>=75)
     		{
				setcolor(WHITE);
				rectangle(99,108,201,130);
				setfillstyle(1,WHITE);
				setcolor(GREEN);
				rectangle(100,109,100+q[g].h,129);
				setfillstyle(1,GREEN);
      		floodfill(99+q[g].h,119,GREEN);
				setcolor(0);
			}
			else if(q[g].h<75 && q[g].h>=40)
			{
				setcolor(WHITE);
				rectangle(99,108,201,130);
				setfillstyle(1,WHITE);
				setcolor(YELLOW);
				rectangle(100,109,100+q[g].h,129);
				setfillstyle(1,YELLOW);
				floodfill(99+q[g].h,119,YELLOW);
				setcolor(0);
     		}
			else if(q[g].h<40 &&q[g].h>0)
			{
				setcolor(WHITE);
				rectangle(99,108,201,130);
				setfillstyle(1,WHITE);
				setcolor(RED);
				rectangle(100,109,100+q[g].h,129);
				setfillstyle(1,RED);
				floodfill(99+q[g].h,119,RED);
				setcolor(0);
     		}	
			else
			{
				setcolor(WHITE);
				rectangle(99,108,201,130);
				setfillstyle(1,WHITE);
     		}
		}
  		else
		{
			if(q[g].h>=75)
			{
				setcolor(WHITE);
				rectangle(99,366,201,388);
				setfillstyle(1,WHITE);
				setcolor(GREEN);
				rectangle(100,367,100+q[g].h,387);
				setfillstyle(1,GREEN);
				floodfill(99+q[g].h,377,GREEN);
				setcolor(0);
			}
			else if(q[g].h<75 && q[g].h>=40)
			{
				setcolor(WHITE);
				rectangle(99,366,201,388);
      		setfillstyle(1,WHITE);
				setcolor(YELLOW);
				rectangle(100,367,100+q[g].h,387);
				setfillstyle(1,YELLOW);
				floodfill(99+q[g].h,377,YELLOW);
				setcolor(0);
			}
			else if(q[g].h<40 &&q[g].h>0)
			{
				setcolor(WHITE);
				rectangle(99,366,201,388);
				setfillstyle(1,WHITE);
      		setcolor(RED);
				rectangle(100,367,100+q[g].h,387);
				setfillstyle(1,RED);
				floodfill(99+q[g].h,377,RED);
				setcolor(0);
			}
			else
			{
				setcolor(WHITE);
				rectangle(99,366,201,388);
				setfillstyle(1,WHITE);
     		}
		}
		cout<<'\n';
		cout<<endl<<"Attack : "<<q[g].att<<endl;
		cout<<'\n';
		cout<<"Defence : "<<q[g].def<<"      "<<"Money : "<<q[g].mon<<endl;
		if(g==0)
			cout<<'\n'<<endl<<"--------------------------------------------------------------------------------"<<endl;
	}
	getch();
}
